{"version":3,"sources":["hooks/web3.ts","models/BoardSection.ts","models/SquareType.ts","components/board/squares/AirportDisplay.tsx","components/board/squares/ChanceDisplay.tsx","components/board/SquareData.tsx","components/board/squares/ColorBar.tsx","hooks/pawnsToDisplay.ts","components/pawns/Pawn.tsx","components/pawns/PawnsGroup.tsx","components/board/squares/PropertyDisplay.tsx","components/board/squares/CentralParkDisplay.tsx","components/board/squares/GoDisplay.tsx","components/board/squares/UtilityDisplay.tsx","components/board/SquareInfo.tsx","store/slices/cardSlice.ts","components/board/GameSquare.tsx","utils/getWeb3.ts","hooks/contract.ts","components/gameControl/PlayerAssign.tsx","store/slices/pawnsSlice.ts","components/gameControl/PlayerDice.tsx","components/card/CaseCard.tsx","components/board/GameBoard.tsx","App.tsx","serviceWorker.ts","store/index.ts","index.tsx"],"names":["Hooks","_useState","useState","isLoading","isWeb3","web3","accounts","_useState2","_slicedToArray","state","BoardSection","SquareType","AirportDisplay","_ref","name","_jsxs","React","Fragment","children","_jsx","className","ChanceDisplay","squareGroupColorMap","Map","SquareConfigData","set","type","Go","section","Bottom","Property","groupId","Chance","Airport","Jail","Left","Utility","CentralPark","Top","GoToJail","Right","ColorBar","get","Hook","id","useSelector","pawns","filter","pawn","position","Pawn","props","style","fontSize","color","PawnsGroup","pawnsToDisplay","usePawnsToDisplay","_Fragment","map","PropertyDisplay","square","CentralParkDisplay","GoDisplay","UtilityDisplay","SquareInfo","cardSlice","createSlice","initialState","selectedSquare","reducers","setSquareInfo","action","payload","actions","GameSquare","_boardData$id","_boardData$id2","dispatch","useDispatch","boardData","squareType","sectionMap","squareTypeClass","setSquare","console","log","onMouseEnter","onMouseLeave","getWeb3","Promise","resolve","reject","window","addEventListener","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_web","provider","_web2","wrap","_context","prev","next","ethereum","Web3","enable","t0","providers","HttpProvider","stop","monopolyContract","setMonopolyContract","_useState3","_useState4","moneyPolyContract","setMoneyPolyContract","_useState5","_useState6","account","setAccount","getInstance","abi","deployedNetwork","json","networks","eth","Contract","address","monopolyAbi","monopolyJson","moneyPolyAbi","moneyPolyJson","useEffect","sent","getAccounts","PlayerAssign","playerNumber","setPlayerNumber","playerPosition","playerTurn","_useState7","_useState8","playerBalance","_useState9","_useState10","_useContract","useContract","assignPlayerNumber","player","abrupt","methods","send","from","players","call","apply","arguments","resetGame","_ref2","_callee2","_context2","getPlayerNumber","_ref3","_callee3","_context3","Card","sx","minWidth","CardContent","Typography","variant","CardActions","Button","onClick","pawnsSlice","setPawnPosition","_objectSpread","steps","PlayerDice","reactDice","useRef","firstRenderRef","userRole","setUserRole","getDiceValues","totalValue","firstValue","getRandomInt","secondValue","min","max","Math","ceil","floor","random","setInterval","_reactDice$current","diceValues","current","rollAll","ReactDice","numDice","ref","rollDone","values","disableIndividual","CaseCard","card","getHouseContent","index","price","_selectedSquare$house","rent","houses","house","getCardContent","GameBoard","num_squares","Array","n","Grid","container","spacing","m","item","xs","App","_useWeb","useWeb3","CssBaseline","Boolean","location","hostname","match","store","configureStore","reducer","cardReducer","pawnsReducer","ReactDOM","render","Provider","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.0990fad4.chunk.js","sourcesContent":["import { useState, useEffect } from 'react';\nimport Web3 from 'web3';\nimport getWeb3 from '../utils/getWeb3';\n\ntype state = {\n  isLoading: boolean;\n  isWeb3: boolean;\n  web3: Web3 | null;\n  accounts: string[];\n};\n\nconst Hooks = (): state => {\n  const [state, setState] = useState<state>({\n    isLoading: true,\n    isWeb3: false,\n    web3: null,\n    accounts: [],\n  });\n\n  // useEffect(() => {\n  //   (async(): Promise<void> => {\n  //     try {\n  //       const web3: Web3 = await getWeb3();\n  //       const accounts = await web3.eth.getAccounts();\n  //       setState({\n  //         ...state,\n  //         isLoading: false,\n  //         isWeb3: true,\n  //         web3,\n  //         accounts,\n  //       });\n  //     } catch {\n  //       setState({\n  //         ...state,\n  //         isLoading: false,\n  //       });\n  //     }\n  //   })();\n  // }, []);\n\n  const { isLoading, isWeb3, web3, accounts } = state;\n  return { isLoading, isWeb3, web3, accounts };\n};\nexport default Hooks;\n","export enum BoardSection {\n  Top = 1,\n  Right = 2,\n  Left = 3,\n  Bottom = 4,\n}\n","export enum SquareType {\n  Property = 1,\n  Airport = 2,\n  Jail = 3,\n  Go = 4,\n  Chance = 5,\n  GoToJail = 6,\n  CentralPark = 7,\n  Utility = 8\n}\n","import React from \"react\";\nimport { NyThemeData } from \"../NyTheme\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faPlane } from '@fortawesome/free-solid-svg-icons'\n\ninterface Props {\n    name: string;\n}\n\nexport const AirportDisplay: React.FC<Props> = ({ name }) => {\n\n    return (\n        <React.Fragment>\n            <div className=\"blank\"></div>\n            <div className=\"icon\">\n                {/* <FontAwesomeIcon icon={faPlane} size=\"3x\" /> */}\n            </div>\n            <div className=\"square-name\"> {name}</div>\n        </React.Fragment>\n    );\n\n};","import React from \"react\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faQuestion } from '@fortawesome/free-solid-svg-icons'\n\ninterface Props {\n    name: string;\n}\n\nexport const ChanceDisplay: React.FC<Props> = ({ name }) => {\n\n    return (\n        <React.Fragment>\n            <div className=\"blank\"></div>\n            <div className=\"icon\">\n                {/* <FontAwesomeIcon icon={faQuestion} size=\"3x\" color=\"orange\" /> */}\n            </div>\n            <div className=\"square-name\"> CHANCE</div>\n        </React.Fragment>\n    );\n\n};","import { SquareType, BoardSection } from \"../../models\";\n\ninterface SquareConfigData {\n  readonly type: SquareType;\n  readonly section: BoardSection;\n  readonly groupId?: number;\n}\n\nconst squareGroupColorMap = new Map<number, string>([\n  [1, \"dark-purple\"], [2, \"light-blue\"], [3, \"purple\"], [4, \"orange\"], [5, \"red\"], [6, \"yellow\"], [7, \"green\"], [8, \"dark-blue\"],\n  [11, \"yellow-green\"], [15, \"island-color\"], [21, \"rose-water\"], [31, \"lilac\"], [41, \"peach\"]\n]);\n\n\n\nconst SquareConfigData = new Map<number, SquareConfigData>();\nSquareConfigData.set(1, { type: SquareType.Go, section: BoardSection.Bottom });\nSquareConfigData.set(2, { type: SquareType.Property, section: BoardSection.Bottom, groupId: 1 });\nSquareConfigData.set(3, { type: SquareType.Chance, section: BoardSection.Bottom });\nSquareConfigData.set(4, { type: SquareType.Property, section: BoardSection.Bottom, groupId: 1 });\nSquareConfigData.set(5, { type: SquareType.Property, section: BoardSection.Bottom, groupId: 15 });\n\nSquareConfigData.set(6, { type: SquareType.Airport, section: BoardSection.Bottom, groupId: 10 });\n\nSquareConfigData.set(7, { type: SquareType.Property, section: BoardSection.Bottom, groupId: 2 });\nSquareConfigData.set(8, { type: SquareType.Chance, section: BoardSection.Bottom });\nSquareConfigData.set(9, { type: SquareType.Property, section: BoardSection.Bottom, groupId: 2 });\nSquareConfigData.set(10, { type: SquareType.Property, section: BoardSection.Bottom, groupId: 2 });\n\nSquareConfigData.set(11, { type: SquareType.Jail, section: BoardSection.Bottom });\n\nSquareConfigData.set(12, { type: SquareType.Property, section: BoardSection.Left, groupId: 3 });\nSquareConfigData.set(13, { type: SquareType.Chance, section: BoardSection.Left });\nSquareConfigData.set(14, { type: SquareType.Property, section: BoardSection.Left, groupId: 3 });\nSquareConfigData.set(15, { type: SquareType.Property, section: BoardSection.Left, groupId: 3 });\n\nSquareConfigData.set(16, { type: SquareType.Airport, section: BoardSection.Left, groupId: 10 });\n\nSquareConfigData.set(17, { type: SquareType.Property, section: BoardSection.Left, groupId: 4 });\nSquareConfigData.set(18, { type: SquareType.Utility, section: BoardSection.Left });\nSquareConfigData.set(19, { type: SquareType.Property, section: BoardSection.Left, groupId: 4 });\nSquareConfigData.set(20, { type: SquareType.Property, section: BoardSection.Left, groupId: 4 });\n\nSquareConfigData.set(21, { type: SquareType.CentralPark, section: BoardSection.Top });\n\nSquareConfigData.set(22, { type: SquareType.Property, section: BoardSection.Top, groupId: 5 });\nSquareConfigData.set(23, { type: SquareType.Chance, section: BoardSection.Top });\nSquareConfigData.set(24, { type: SquareType.Property, section: BoardSection.Top, groupId: 5 });\nSquareConfigData.set(25, { type: SquareType.Property, section: BoardSection.Top, groupId: 5 });\n\nSquareConfigData.set(26, { type: SquareType.Airport, section: BoardSection.Top, groupId: 10 });\n\nSquareConfigData.set(27, { type: SquareType.Property, section: BoardSection.Top, groupId: 6 });\nSquareConfigData.set(28, { type: SquareType.Chance, section: BoardSection.Top });\nSquareConfigData.set(29, { type: SquareType.Property, section: BoardSection.Top, groupId: 6 });\nSquareConfigData.set(30, { type: SquareType.Property, section: BoardSection.Top, groupId: 6 });\n\nSquareConfigData.set(31, { type: SquareType.GoToJail, section: BoardSection.Top });\n\nSquareConfigData.set(32, { type: SquareType.Property, section: BoardSection.Right, groupId: 7 });\nSquareConfigData.set(33, { type: SquareType.Chance, section: BoardSection.Right });\nSquareConfigData.set(34, { type: SquareType.Property, section: BoardSection.Right, groupId: 7 });\nSquareConfigData.set(35, { type: SquareType.Property, section: BoardSection.Right, groupId: 7 });\n\nSquareConfigData.set(36, { type: SquareType.Airport, section: BoardSection.Right, groupId: 10 });\n\nSquareConfigData.set(37, { type: SquareType.Utility, section: BoardSection.Right });\n\nSquareConfigData.set(38, { type: SquareType.Property, section: BoardSection.Right, groupId: 8 });\nSquareConfigData.set(39, { type: SquareType.Chance, section: BoardSection.Right });\nSquareConfigData.set(40, { type: SquareType.Property, section: BoardSection.Right, groupId: 8 });\n\nexport { SquareConfigData, squareGroupColorMap };","import React from \"react\";\nimport { squareGroupColorMap } from \"../SquareData\";\n\ninterface Props {\n    groupId: number;\n}\n\nexport const ColorBar: React.FC<Props> = ({ groupId }) => {\n\n    const getClassName = () => {\n        return \"square-color-bar \" + squareGroupColorMap.get(groupId);\n    };\n\n    return (\n        <div className={getClassName()}></div>\n    );\n\n};","import { useSelector } from \"react-redux\";\nimport { PawnInterface } from \"../models\";\nimport { RootState } from \"../store\";\n\n\nconst Hook = (id: number): PawnInterface[] => {\n    const pawns: PawnInterface[] = useSelector(\n        (state: RootState) => state.pawns.pawns\n      );\n    const pawnsToDisplay = pawns.filter((pawn) => pawn.position+1 === id);\n    return pawnsToDisplay\n}\n\nexport default Hook","import React from 'react'\n\ntype Props = {\n    color: string\n}\n\nconst Pawn = (props: Props) => {\n  return (\n    <span style={{fontSize:'24px', color: props.color}}>&#9823;</span>\n\n  )\n}\n\nexport default Pawn","import React from \"react\";\nimport usePawnsToDisplay from \"../../hooks/pawnsToDisplay\";\nimport { PawnInterface } from \"../../models\";\nimport Pawn from \"./Pawn\";\n\ntype Props = {\n  id: number;\n};\n\nconst PawnsGroup: React.FC<Props> = ({ id }) => {\n  const pawnsToDisplay = usePawnsToDisplay(id);\n  return (\n    <>\n      {pawnsToDisplay.map((pawn: PawnInterface) => (\n        <Pawn key={pawn.id} color={pawn.color} />\n      ))}\n    </>\n  );\n};\n\nexport default PawnsGroup;\n","import React from \"react\";\nimport { SquareInterface } from \"../../../models\";\nimport { ColorBar } from \"./ColorBar\";\nimport PawnsGroup from \"../../pawns/PawnsGroup\";\ninterface Props {\n    square: SquareInterface;\n}\n\n\nexport const PropertyDisplay: React.FC<Props> = ({ square }) => {\n    return (\n        <React.Fragment>\n            <ColorBar groupId={square.groupId || 0} />\n            <div className=\"square-name\">\n                <PawnsGroup id={square.id} />\n                {square.name}\n            </div>\n        </React.Fragment>\n    );\n\n};","import React from \"react\";\n\ninterface Props {\n    name: string;\n}\n\nexport const CentralParkDisplay: React.FC<Props> = ({ name }) => {\n\n    return (\n        <React.Fragment>\n            <div className=\"icon\"></div>\n            <div className=\"square-name\"> central park</div>\n        </React.Fragment>\n    );\n\n};","import React from \"react\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faHandPointLeft } from '@fortawesome/free-solid-svg-icons'\nimport { SquareInterface } from \"../../../models\";\nimport usePawnsToDisplay from \"../../../hooks/pawnsToDisplay\";\nimport PawnsGroup from \"../../pawns/PawnsGroup\";\n\ninterface Props {\n    square: SquareInterface;\n}\n\nexport const GoDisplay: React.FC<Props> = ({ square }) => {\n    return (\n        <React.Fragment>\n            <div className=\"blank\"></div>\n            <div className=\"icon\">\n                {/* <FontAwesomeIcon icon={faHandPointLeft} color=\"green\" /> */}\n            </div>\n            <div className=\"square-name\"><PawnsGroup id={square.id} />GO</div>\n        </React.Fragment>\n    );\n\n};","import React from \"react\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faLightbulb } from '@fortawesome/free-solid-svg-icons'\nimport { faSubway } from '@fortawesome/free-solid-svg-icons'\nimport { NyThemeData } from \"../NyTheme\";\n\ninterface Props {\n    name: string;\n}\n\nexport const UtilityDisplay: React.FC<Props> = ({ name }) => {\n\n    // const txt: string | undefined = NyThemeData.get(id)?.name;\n    // const icon: string | undefined = NyThemeData.get(id)?.icon;\n\n\n    const getSubwayCompany = () => {\n        return (<React.Fragment>\n            <div className=\"blank\"></div>\n            <div className=\"icon\">\n                {/* <FontAwesomeIcon icon={faSubway} size=\"3x\" color=\"blue\" /> */}\n            </div>\n            <div className=\"square-name\"> {name}</div>\n        </React.Fragment>);\n    };\n\n    // const getElectricCompany = () => {\n    //     return (<React.Fragment>\n    //         <div className=\"blank\"></div>\n    //         <div className=\"icon\">\n    //             {/* <FontAwesomeIcon icon={faLightbulb} size=\"3x\" color=\"blue\" /> */}\n    //         </div>\n    //         <div className=\"square-name\"> {txt}</div>\n    //     </React.Fragment>);\n    // };\n\n\n    return (\n        // icon === \"subway\" ? getSubwayCompany() : getElectricCompany()\n        getSubwayCompany()\n    );\n\n};","import React from \"react\";\nimport { AirportDisplay } from \"./squares/AirportDisplay\";\nimport { ChanceDisplay } from \"./squares/ChanceDisplay\";\nimport { PropertyDisplay } from \"./squares/PropertyDisplay\";\nimport { CentralParkDisplay } from \"./squares/CentralParkDisplay\";\nimport { GoDisplay } from \"./squares/GoDisplay\";\nimport { UtilityDisplay } from \"./squares/UtilityDisplay\";\nimport { SquareInterface, SquareType } from \"../../models\";\n\ninterface Props {\n    square: SquareInterface;\n}\n\nexport const SquareInfo: React.FC<Props> = ({ square }) => {\n\n    const {name, type} = square;\n\n    const getInfo = () => {\n        if (type === SquareType.Airport) {\n            return <AirportDisplay name={name} />\n        }\n        if (type === SquareType.Chance) {\n            return <ChanceDisplay name={name} />\n        }\n        if (type === SquareType.CentralPark) {\n            return <CentralParkDisplay name={name} />\n        }\n        if (type === SquareType.Go) {\n            return <GoDisplay square={square} />\n        }\n        if (type === SquareType.Utility) {\n            return <UtilityDisplay name={name} />\n        }\n\n        if (type === SquareType.Jail || type === SquareType.GoToJail) {\n            return null;\n        }\n\n        return <PropertyDisplay square={square} />\n    };\n\n\n    return (\n        getInfo()\n    );\n\n};","import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\nimport { SquareInterface } from \"../../models\";\n\ninterface InitialState {\n  selectedSquare: SquareInterface | null;\n}\nconst initialState: InitialState = {\n    selectedSquare: null,\n};\n\nexport const cardSlice = createSlice({\n  name: \"card\",\n  initialState: initialState,\n  reducers: {\n    setSquareInfo: (state, action: PayloadAction<SquareInterface | null>) => {\n      state.selectedSquare = action.payload;\n    },\n  },\n});\n\n// Action creators are generated for each case reducer function\nexport const { setSquareInfo } = cardSlice.actions;\n// You must export the reducer as follows for it to be able to be read by the store.\nexport default cardSlice.reducer;","import React from \"react\";\nimport { BoardSection, SquareType } from \"../../models\";\nimport boardData from \"../../data/board.json\";\nimport { SquareInfo } from \"./SquareInfo\";\nimport { RootState } from \"../../store\";\nimport { useDispatch, } from \"react-redux\";\nimport { setSquareInfo } from \"../../store/slices/cardSlice\";\ninterface Props {\n  id: number;\n}\n\nexport const GameSquare: React.FC<Props> = ({ id }) => {\n\n  const dispatch = useDispatch();\n\n  const section: BoardSection = boardData[id]?.section!;\n  const squareType: SquareType = boardData[id]?.type!;\n\n  const sectionMap = new Map<BoardSection, string>([\n    [BoardSection.Top, \"top\"],\n    [BoardSection.Right, \"right\"],\n    [BoardSection.Left, \"left\"],\n    [BoardSection.Bottom, \"bottom\"],\n  ]);\n\n  const squareTypeClass = new Map<SquareType, string>([\n    [SquareType.Airport, \"airport\"],\n    [SquareType.Chance, \"chance\"],\n    [SquareType.Go, \"passgo\"],\n    [SquareType.GoToJail, \"go-to-jail\"],\n    [SquareType.Jail, \"jail\"],\n    [SquareType.Property, \"property\"],\n    [SquareType.CentralPark, \"central-park\"],\n    [SquareType.Utility, \"utility\"],\n  ]);\n\n  const getContainerClassName = () => {\n    return \"container container-\" + sectionMap.get(section);\n  };\n\n  const getSquareClassName = () => {\n    return \"square \" + squareTypeClass.get(squareType);\n  };\n\n  const getSquareId = () => {\n    return \"game-square-\" + id;\n  };\n\n  const setSquare = (id: number | null) => {\n    console.log(\"setSquare\", id);\n    if(id) dispatch(setSquareInfo(boardData[id]));\n    else dispatch(setSquareInfo(null));\n  }\n\n  const getSquare = () => {\n    return (\n      <div  onMouseEnter={() => setSquare(id)}\n          onMouseLeave={() => setSquare(null)}\n          className={getSquareClassName()} \n          id={getSquareId()}>\n        <div className={getContainerClassName()}>\n           <SquareInfo square={boardData[id]} />\n        </div>\n      </div>\n    );\n  };\n\n  return boardData[id] ? getSquare() : null;\n};\n","import Web3 from 'web3';\n\ninterface Window {\n  ethereum: any;\n  web3: Web3;\n  addEventListener: any;\n}\ndeclare const window: Window;\n\nconst getWeb3 = (): Promise<Web3> =>\n  new Promise((resolve, reject) => {\n    // Wait for loading completion to avoid race conditions with web3 injection timing.\n    window.addEventListener('load', async () => {\n      // Modern dapp browsers...\n      if (window.ethereum) {\n        const web3 = new Web3(window.ethereum);\n        try {\n          // Request account access if needed\n          await window.ethereum.enable();\n          // Acccounts now exposed\n          resolve(web3);\n        } catch (error) {\n          reject(error);\n        }\n      }\n      // Legacy dapp browsers...\n      else if (window.web3) {\n        // Use Mist/MetaMask's provider.\n        const web3 = window.web3;\n        console.log('Injected web3 detected.');\n        resolve(web3);\n      }\n      // Fallback to localhost; use dev console port by default...\n      else {\n        const provider = new Web3.providers.HttpProvider(\n          'http://127.0.0.1:7545',\n        );\n        const web3 = new Web3(provider);\n        console.log('No web3 instance injected, using Local web3.');\n        resolve(web3);\n      }\n    });\n  });\n\nexport default getWeb3;","import { useState, useEffect } from \"react\";\nimport { Contract } from \"web3-eth-contract\";\nimport json from \"../contracts/MoneyPoly.json\";\nimport moneyPolyJson from \"../contracts/MoneyPoly.json\";\nimport monopolyJson from \"../contracts/Monopoly.json\";\nimport getWeb3 from \"../utils/getWeb3\";\nimport useWeb3 from \"./web3\";\n\nconst Hooks = (): any => {\n  const [monopolyContract, setMonopolyContract] = useState<Contract|null>();\n  const [moneyPolyContract, setMoneyPolyContract] = useState<Contract|null>();\n  const [account, setAccount] = useState<any>();\n\n  // const { isLoading, isWeb3, web3 } = useWeb3();\n\n  const getInstance = (abi: any, web3: any) => {\n    if (!web3) return null;\n    const deployedNetwork = json.networks[5777];\n    const instance = new web3.eth.Contract(\n      abi,\n      deployedNetwork && deployedNetwork.address\n    );\n    return instance;\n  }\n\n  const monopolyAbi: any = monopolyJson.abi;\n  const moneyPolyAbi: any = moneyPolyJson.abi;\n  useEffect(() => {\n    (async () => {\n      const web3 = await getWeb3();\n\n      if (web3 !== null) {\n        const accounts = await web3.eth.getAccounts();\n        console.log({ accounts });\n        setAccount(accounts[0]);\n        setMonopolyContract(getInstance(monopolyAbi, web3));\n        setMoneyPolyContract(getInstance(moneyPolyAbi, web3));\n      }\n    })();\n  }, []);\n\n  return { monopolyContract, moneyPolyContract, account };\n};\nexport default Hooks;\n","import React, { useEffect, useState } from \"react\";\nimport { Button, Card, CardContent, CardActions, Grid, Typography } from \"@mui/material\";\n\nimport useContract from \"../../hooks/contract\";\n\ntype Props = {};\n\nconst PlayerAssign = (props: Props) => {\n  const [playerNumber, setPlayerNumber] = useState(null);\n  const [playerPosition, setPlayerPosition] = useState(1);\n  const [playerTurn, setPlayerTurn] = useState(1);\n  const [playerBalance, setPlayerBalance] = useState(0);\n  const [allPlayerPositions, setAllPlayerPositions] = useState([]);\n  const { monopolyContract, moneyPolyContract, account } = useContract();\n  const assignPlayerNumber = async () => {\n    if (!monopolyContract) return;\n    await monopolyContract.methods.assignPlayerNumber().send({ from: account });\n    const player = await monopolyContract.methods.players(account).call();\n    if (player.playerNumber !== \"0\") {\n      setPlayerNumber(player.playerNumber);\n    }\n  };\n  const resetGame = async () => {\n    if (!monopolyContract) return;\n    await monopolyContract.methods.resetGame().send({ from: account });\n    setPlayerNumber(null);\n    //   setPlayerPosition(0);\n    //   setPlayerTurn(1);\n    //   setPlayerBalance(0);\n    //   setHouses([]);\n  };\n  const getPlayerNumber = async () => {\n    if(!monopolyContract) return;\n    const player = await monopolyContract.methods.players(account).call();\n    if (player.playerNumber !== '0') {\n      setPlayerNumber(player.playerNumber);\n    }\n  };\n  const fetchPlayerTurn = async () => {\n    if(!monopolyContract) return;\n    const playerTurnValue = await monopolyContract.methods.getPlayerTurn().call();\n    console.log(\"playerTurn is : \", playerTurnValue); \n    setPlayerTurn(playerTurnValue);\n  };\n\n\n  useEffect(() => {\n    if(monopolyContract) getPlayerNumber();\n  }, [account, monopolyContract]);\n  \n  return (\n    \n        <Card sx={{ minWidth: 275 }}>\n          <CardContent>\n            <Typography variant=\"body2\">Player {playerNumber ? playerNumber : \"\"}</Typography>\n            <Typography variant=\"body2\">Position {playerPosition ? playerPosition : ''}</Typography>\n            <Typography variant=\"body2\">Player Turn {playerTurn}</Typography>\n            <Typography variant=\"body2\">Player Balance {playerBalance}</Typography>\n          </CardContent>\n          <CardActions>\n            <Button variant=\"contained\" onClick={resetGame}>Reset game</Button>\n            <Button variant=\"contained\" onClick={assignPlayerNumber}>Assign player number</Button>\n          </CardActions>\n        </Card>\n  );\n};\n\nexport default PlayerAssign;\n","import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\nimport { PawnInterface } from \"../../models\";\nimport pawnsData from \"../../data/pawns.json\";\ninterface InitialState {\n  pawns: PawnInterface[];\n}\n\ninterface PawnStepsInterface {\n  id: number;\n  steps: number;\n}\nconst initialState: InitialState = {\n    pawns: pawnsData,\n};\n\nexport const pawnsSlice = createSlice({\n  name: \"pawns\",\n  initialState: initialState,\n  reducers: {\n    setPawnPosition: (state, action: PayloadAction<PawnStepsInterface>) => {\n      state.pawns = state.pawns.map((pawn) => {\n        if (pawn.id === action.payload.id) {\n          return {\n            ...pawn,\n            position: action.payload.steps + pawn.position,\n          };\n        }\n        return pawn;\n      })\n    },\n  },\n});\n\n// Action creators are generated for each case reducer function\nexport const { setPawnPosition } = pawnsSlice.actions;\n// You must export the reducer as follows for it to be able to be read by the store.\nexport default pawnsSlice.reducer;","import { Button, Card, CardActions, CardContent } from \"@mui/material\";\nimport React, { useEffect, useRef, useState } from \"react\";\nimport ReactDice, { ReactDiceRef } from \"react-dice-complete\";\n\n// import useContract from \"../../hooks/contract\";\nimport { useDispatch } from \"react-redux\";\nimport { setPawnPosition } from \"../../store/slices/pawnsSlice\";\ntype Props = {};\n\nconst PlayerDice = (props: Props) => {\n  const dispatch = useDispatch();\n\n  const reactDice = useRef<ReactDiceRef>(null);\n  const firstRenderRef = useRef(true);\n  // const { monopolyContract , account } = useContract();\n\tconst [diceValues, setDiceValues] = useState([]);\n\tconst [userRole, setUserRole] = useState(1);\n\n\n  // const throwDice = async () => {\n  //   if (!monopolyContract) return;\n  //   try {\n  //     await monopolyContract.methods.throwDice().send({ from: account });\n  //   } catch (error) {\n  //     console.log(error);\n  //   }\n  // };\n\n  const rollDone = (totalValue: number, values: number[]) => {\n    const firstRender = firstRenderRef.current;\n\n    if (firstRender) {\n      firstRenderRef.current = false;\n      return;\n    }\n    dispatch(setPawnPosition({\n      id: userRole+1,\n      steps: totalValue,\n    }))\n    setUserRole((userRole + 1) % 4);\n  };\n\n\tconst diceThrowCallback =  () => {\n\t\tsetInterval(() => {\n\t\t\tconst totalValue = getRandomInt(2, 12)\n\t\t\tconst diceValues = getDiceValues(totalValue);\n\t\t\treactDice.current?.rollAll(diceValues)\n\t\t}, 10000)\n\t}\n\n\tconst getDiceValues = (totalValue: number): number[] => {\n\t\tlet firstValue = getRandomInt(1, 6);\n\t\tlet secondValue = totalValue - firstValue;\n\t\twhile (secondValue < 1 || secondValue > 6) {\n\t\t\tfirstValue = getRandomInt(1, 6);\n\t\t\tsecondValue = totalValue - firstValue;\n\t\t}\n\t\treturn [firstValue, secondValue];\n\t}\n\n\tconst getRandomInt = (min: number, max: number) => {\n\t\tmin = Math.ceil(min);\n\t\tmax = Math.floor(max);\n\t\treturn Math.floor(Math.random() * (max - min) + min); // The maximum is exclusive and the minimum is inclusive\n\t}\n\t\n\n\tuseEffect(() => {\n    // if (!monopolyContract) {\n    //   return;\n    // }\n\t\tdiceThrowCallback();\n    // monopolyContract.events.DiceThrown({}, (error: any, event: any) => {\n    //   if (!error) {\n    //     // setPlayerPosition(event.returnValues.playerPosition);\n    //     // setPlayerTurn(event.returnValues.playerTurn);\n    //     // setPlayerHasChoice(event.returnValues.playerHasChoice);\n\t\t// \t\treactDice.current?.rollAll(event.returnValues.playerHasChoice)\n    //   } else {\n    //     console.error(error);\n    //   }\n    // });\n\t\t\n  }, []);\n  return (\n    <Card sx={{ minWidth: 275 }}>\n      <CardContent>\n        <ReactDice\n          numDice={2}\n          ref={reactDice}\n          rollDone={rollDone}\n          disableIndividual\n        />\n      </CardContent>\n      {/* <CardActions>\n        <Button variant=\"contained\" onClick={throwDice}>\n          Throw Dice\n        </Button>\n      </CardActions> */}\n    </Card>\n  );\n};\n\nexport default PlayerDice;\n","import { Card, CardContent } from \"@mui/material\";\nimport React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { SquareInterface } from \"../../models\";\nimport { HouseInterface } from \"../../models/HouseInterface\";\nimport { RootState } from \"../../store\";\nimport { squareGroupColorMap } from \"../board/SquareData\";\n\ntype Props = {\n  //   rent: number;\n  //   mortgage: number;\n  //   color: string;\n};\n\nconst CaseCard = (props: Props) => {\n  const selectedSquare: SquareInterface | null = useSelector(\n    (state: RootState) => state.card.selectedSquare\n  );\n  const getClassName = (groupId: number | undefined) => {\n    return groupId ? squareGroupColorMap.get(groupId) : \"\";\n};\n\n  const getCardContent = (selectedSquare: SquareInterface) => {\n    return (\n      <div className=\"wrapper\">\n        <div className=\"box\">\n          <h2 className={getClassName(selectedSquare.groupId)}>{selectedSquare.name}</h2>\n          <p className=\"align-center\">{selectedSquare.rent}</p>\n          <div className=\"clear-both\">\n            {selectedSquare?.houses?.map((house: HouseInterface, index: number) => {\n              return (\n                getHouseContent(index, house.price)\n              );\n            })}\n          </div>\n          <p className=\"align-center clear-both\">With HOTEL $1050</p>\n          <small className=\"align-center\">Morgage Value $110</small>\n        </div>\n      </div>\n    );\n  };\n\n  const getHouseContent = (index: number, price: number) => {\n      return (\n        <>\n            <div className=\"float-left\">With {1 + index} House</div>\n            <div className=\"float-right\">${price}</div>\n            <br />\n        </>  \n      )\n  }\n  return (\n    <Card sx={{ minWidth: 275 }}>\n      <CardContent>\n        {selectedSquare?.groupId ? (\n          getCardContent(selectedSquare)\n        ) : (\n          <div>No card selected</div>\n        )}\n      </CardContent>\n    </Card>\n  );\n};\nexport default CaseCard;\n","import React from \"react\";\n// import PlayerNumber from \"../playerNumber/PlayerNumber\";\nimport { GameSquare } from \"./GameSquare\";\nimport PlayerAssign from \"../gameControl/PlayerAssign\";\nimport { Grid } from \"@mui/material\";\nimport PlayerDice from \"../gameControl/PlayerDice\";\nimport CaseCard from \"../card/CaseCard\";\n\nexport default function GameBoard() {\n  const num_squares: Array<number> = Array.from(Array(40));\n\n  return (\n    <React.Fragment>\n      <div className=\"board\">\n\n        {num_squares.map((n, index) => {\n          const id: number = index;\n\n          return (<GameSquare\n            id={id}\n            key={id}\n          />)\n        })}\n\n\n        <div className=\"center-square square\">\n        <Grid container spacing={2} sx={{ m: 2 }}>\n          <Grid item xs={4}>\n            <PlayerAssign />\n          </Grid>\n          <Grid item xs={4}>\n            <PlayerDice />\n          </Grid>\n          <Grid item xs={4}>\n            <CaseCard />\n          </Grid>\n        </Grid>\n        </div>\n      </div>\n    </React.Fragment>\n  );\n}\n","import React, { useState,  } from 'react';\n\nimport './css/App.css';\nimport { Contract } from 'web3-eth-contract';\nimport json from './contracts/Monopoly.json';\nimport useWeb3 from './hooks/web3';\n\n\nimport GameBoard from \"./components/board/GameBoard\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nconst App: React.VFC = () => {\n  const { isLoading, isWeb3, web3, accounts } = useWeb3();\n  const [instance, setInstance] = useState<Contract>();\n  const [value, setValue] = useState('');\n\n  const abi: any = json.abi;\n\n\n\n  const runExample = async() => {\n    await instance?.methods.set('hello World').send({ from: accounts[0]});\n    const response = await instance?.methods.get().call();\n    setValue(response);\n  }\n\n  return (\n    <React.Fragment>\n        <CssBaseline />\n        <GameBoard />\n    </React.Fragment>\n    // <div className=\"App\">\n    //   { isLoading ? <div>Loading Web3, accounts, and contract...</div>\n    //   : isWeb3 ? \n    //     <>\n    //       <h1>Good to Go!</h1>\n    //       <p>Your Truffle Box is installed and ready.</p>\n    //       <h2>Smart Contract Example</h2>\n    //       <p>\n    //         If your contracts compiled and migrated successfully, below will show\n    //         a stored value of \"hello World\" (by default).\n    //       </p>\n    //       <p>\n    //         Try changing the value stored on <strong>line 63</strong> of App.ts.\n    //       </p>\n    //       <div>The stored value is: {value}</div>\n\n    //       <p>Click here to run the contract↓</p>\n    //       <button onClick={runExample} >click</button>\n    //     </>\n    //     : <div>\n    //       <p>none web3</p>\n    //     </div>\n    //   }\n    // </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { configureStore } from \"@reduxjs/toolkit\";\n// This is how you import a reducer, based on the prior export.\nimport cardReducer from \"./slices/cardSlice\";\nimport pawnsReducer from \"./slices/pawnsSlice\";\n\nconst store = configureStore({\n  reducer: {\n    // You are free to call the LHS what you like, but it must have a reducer on the RHS.\n    card: cardReducer,\n    pawns: pawnsReducer\n  },\n});\n\nexport default store;\n\nexport type RootState = ReturnType<typeof store.getState>;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./css/index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nimport store from \"./store\";\nimport { Provider } from \"react-redux\";\n\nReactDOM.render(\n    <Provider store={store}>\n      <App />\n    </Provider>,\n  document.getElementById(\"root\")\n);\nserviceWorker.unregister();\n"],"sourceRoot":""}